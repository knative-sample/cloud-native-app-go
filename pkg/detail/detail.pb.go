// Code generated by protoc-gen-go. DO NOT EDIT.
// source: detail.proto

package detail

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DetailQuery struct {
	Citycode             string   `protobuf:"bytes,1,opt,name=citycode,proto3" json:"citycode,omitempty"`
	Date                 string   `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DetailQuery) Reset()         { *m = DetailQuery{} }
func (m *DetailQuery) String() string { return proto.CompactTextString(m) }
func (*DetailQuery) ProtoMessage()    {}
func (*DetailQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_2ba7d873f5964269, []int{0}
}

func (m *DetailQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetailQuery.Unmarshal(m, b)
}
func (m *DetailQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetailQuery.Marshal(b, m, deterministic)
}
func (m *DetailQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetailQuery.Merge(m, src)
}
func (m *DetailQuery) XXX_Size() int {
	return xxx_messageInfo_DetailQuery.Size(m)
}
func (m *DetailQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_DetailQuery.DiscardUnknown(m)
}

var xxx_messageInfo_DetailQuery proto.InternalMessageInfo

func (m *DetailQuery) GetCitycode() string {
	if m != nil {
		return m.Citycode
	}
	return ""
}

func (m *DetailQuery) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

type DetailInfo struct {
	Adcode               string   `protobuf:"bytes,1,opt,name=adcode,proto3" json:"adcode,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Date                 string   `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	Daypower             string   `protobuf:"bytes,4,opt,name=daypower,proto3" json:"daypower,omitempty"`
	Daytemp              string   `protobuf:"bytes,5,opt,name=daytemp,proto3" json:"daytemp,omitempty"`
	Dayweather           string   `protobuf:"bytes,6,opt,name=dayweather,proto3" json:"dayweather,omitempty"`
	Daywind              string   `protobuf:"bytes,7,opt,name=daywind,proto3" json:"daywind,omitempty"`
	Nightpower           string   `protobuf:"bytes,8,opt,name=nightpower,proto3" json:"nightpower,omitempty"`
	Nighttemp            string   `protobuf:"bytes,9,opt,name=nighttemp,proto3" json:"nighttemp,omitempty"`
	Nightweather         string   `protobuf:"bytes,10,opt,name=nightweather,proto3" json:"nightweather,omitempty"`
	Nightwind            string   `protobuf:"bytes,11,opt,name=nightwind,proto3" json:"nightwind,omitempty"`
	Province             string   `protobuf:"bytes,12,opt,name=province,proto3" json:"province,omitempty"`
	Reporttime           string   `protobuf:"bytes,13,opt,name=reporttime,proto3" json:"reporttime,omitempty"`
	Week                 string   `protobuf:"bytes,14,opt,name=week,proto3" json:"week,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DetailInfo) Reset()         { *m = DetailInfo{} }
func (m *DetailInfo) String() string { return proto.CompactTextString(m) }
func (*DetailInfo) ProtoMessage()    {}
func (*DetailInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_2ba7d873f5964269, []int{1}
}

func (m *DetailInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DetailInfo.Unmarshal(m, b)
}
func (m *DetailInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DetailInfo.Marshal(b, m, deterministic)
}
func (m *DetailInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DetailInfo.Merge(m, src)
}
func (m *DetailInfo) XXX_Size() int {
	return xxx_messageInfo_DetailInfo.Size(m)
}
func (m *DetailInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DetailInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DetailInfo proto.InternalMessageInfo

func (m *DetailInfo) GetAdcode() string {
	if m != nil {
		return m.Adcode
	}
	return ""
}

func (m *DetailInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DetailInfo) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *DetailInfo) GetDaypower() string {
	if m != nil {
		return m.Daypower
	}
	return ""
}

func (m *DetailInfo) GetDaytemp() string {
	if m != nil {
		return m.Daytemp
	}
	return ""
}

func (m *DetailInfo) GetDayweather() string {
	if m != nil {
		return m.Dayweather
	}
	return ""
}

func (m *DetailInfo) GetDaywind() string {
	if m != nil {
		return m.Daywind
	}
	return ""
}

func (m *DetailInfo) GetNightpower() string {
	if m != nil {
		return m.Nightpower
	}
	return ""
}

func (m *DetailInfo) GetNighttemp() string {
	if m != nil {
		return m.Nighttemp
	}
	return ""
}

func (m *DetailInfo) GetNightweather() string {
	if m != nil {
		return m.Nightweather
	}
	return ""
}

func (m *DetailInfo) GetNightwind() string {
	if m != nil {
		return m.Nightwind
	}
	return ""
}

func (m *DetailInfo) GetProvince() string {
	if m != nil {
		return m.Province
	}
	return ""
}

func (m *DetailInfo) GetReporttime() string {
	if m != nil {
		return m.Reporttime
	}
	return ""
}

func (m *DetailInfo) GetWeek() string {
	if m != nil {
		return m.Week
	}
	return ""
}

func init() {
	proto.RegisterType((*DetailQuery)(nil), "detail.DetailQuery")
	proto.RegisterType((*DetailInfo)(nil), "detail.DetailInfo")
}

func init() { proto.RegisterFile("detail.proto", fileDescriptor_2ba7d873f5964269) }

var fileDescriptor_2ba7d873f5964269 = []byte{
	// 296 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x92, 0xcf, 0x4a, 0xc4, 0x30,
	0x10, 0xc6, 0x5d, 0x77, 0xed, 0x6e, 0x67, 0xab, 0x87, 0x11, 0x24, 0x14, 0x11, 0xe9, 0xc9, 0xd3,
	0x1e, 0x14, 0xbc, 0x09, 0x1e, 0x04, 0xf1, 0xa8, 0x6f, 0x10, 0x9b, 0xd1, 0x0d, 0xda, 0xa6, 0x84,
	0xd1, 0xd2, 0x77, 0xf0, 0xa1, 0x25, 0x93, 0xfe, 0xdb, 0xdb, 0xfc, 0xbe, 0xe9, 0x37, 0x5f, 0x9a,
	0x09, 0x64, 0x86, 0x58, 0xdb, 0xef, 0x5d, 0xe3, 0x1d, 0x3b, 0x4c, 0x22, 0x15, 0x0f, 0xb0, 0x7d,
	0x92, 0xea, 0xf5, 0x87, 0x7c, 0x87, 0x39, 0x6c, 0x4a, 0xcb, 0x5d, 0xe9, 0x0c, 0xa9, 0xc5, 0xf5,
	0xe2, 0x26, 0x7d, 0x1b, 0x19, 0x11, 0x56, 0x46, 0x33, 0xa9, 0x63, 0xd1, 0xa5, 0x2e, 0xfe, 0x96,
	0x00, 0xd1, 0xff, 0x52, 0x7f, 0x38, 0xbc, 0x80, 0x44, 0x9b, 0x99, 0xb9, 0xa7, 0x60, 0xad, 0x75,
	0x35, 0x5a, 0x43, 0x3d, 0x8e, 0x5b, 0x4e, 0xe3, 0x42, 0xbc, 0xd1, 0x5d, 0xe3, 0x5a, 0xf2, 0x6a,
	0x15, 0xe3, 0x07, 0x46, 0x05, 0x6b, 0xa3, 0x3b, 0xa6, 0xaa, 0x51, 0x27, 0xd2, 0x1a, 0x10, 0xaf,
	0x00, 0x8c, 0xee, 0x5a, 0xd2, 0xbc, 0x27, 0xaf, 0x12, 0x69, 0xce, 0x94, 0xde, 0xd9, 0xda, 0xda,
	0xa8, 0xf5, 0xe8, 0x0c, 0x18, 0x9c, 0xb5, 0xfd, 0xdc, 0x73, 0x4c, 0xdc, 0x44, 0xe7, 0xa4, 0xe0,
	0x25, 0xa4, 0x42, 0x92, 0x9a, 0x4a, 0x7b, 0x12, 0xb0, 0x80, 0x4c, 0x60, 0x48, 0x06, 0xf9, 0xe0,
	0x40, 0x1b, 0x27, 0x48, 0xfa, 0x76, 0x36, 0x41, 0xf2, 0x73, 0xd8, 0x34, 0xde, 0xfd, 0xda, 0xba,
	0x24, 0x95, 0xc5, 0xff, 0x1d, 0x38, 0x9c, 0xcd, 0x53, 0xe3, 0x3c, 0xb3, 0xad, 0x48, 0x9d, 0xc6,
	0xb3, 0x4d, 0x4a, 0xb8, 0xbf, 0x96, 0xe8, 0x4b, 0x9d, 0xc5, 0xfb, 0x0b, 0xf5, 0xed, 0x23, 0x24,
	0x71, 0x1b, 0x78, 0x0f, 0xe9, 0x33, 0x71, 0x0f, 0xe7, 0xbb, 0x7e, 0xf7, 0xb3, 0x55, 0xe7, 0x78,
	0x28, 0x86, 0xfd, 0x15, 0x47, 0xef, 0x89, 0x3c, 0x8f, 0xbb, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x99, 0xf2, 0x78, 0x2f, 0x2e, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DetailClient is the client API for Detail service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DetailClient interface {
	GetDetail(ctx context.Context, in *DetailQuery, opts ...grpc.CallOption) (*DetailInfo, error)
}

type detailClient struct {
	cc *grpc.ClientConn
}

func NewDetailClient(cc *grpc.ClientConn) DetailClient {
	return &detailClient{cc}
}

func (c *detailClient) GetDetail(ctx context.Context, in *DetailQuery, opts ...grpc.CallOption) (*DetailInfo, error) {
	out := new(DetailInfo)
	err := c.cc.Invoke(ctx, "/detail.Detail/GetDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DetailServer is the server API for Detail service.
type DetailServer interface {
	GetDetail(context.Context, *DetailQuery) (*DetailInfo, error)
}

// UnimplementedDetailServer can be embedded to have forward compatible implementations.
type UnimplementedDetailServer struct {
}

func (*UnimplementedDetailServer) GetDetail(ctx context.Context, req *DetailQuery) (*DetailInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDetail not implemented")
}

func RegisterDetailServer(s *grpc.Server, srv DetailServer) {
	s.RegisterService(&_Detail_serviceDesc, srv)
}

func _Detail_GetDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DetailQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DetailServer).GetDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/detail.Detail/GetDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DetailServer).GetDetail(ctx, req.(*DetailQuery))
	}
	return interceptor(ctx, in, info, handler)
}

var _Detail_serviceDesc = grpc.ServiceDesc{
	ServiceName: "detail.Detail",
	HandlerType: (*DetailServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDetail",
			Handler:    _Detail_GetDetail_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "detail.proto",
}
